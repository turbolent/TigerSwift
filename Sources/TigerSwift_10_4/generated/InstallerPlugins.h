// Generated by W2C2BridgeGenerator
#include <stdarg.h>

// opaque 'InstallerPane_Private'
typedef struct InstallerPane_Private *InstallerPane_Private;

// opaque 'InstallerSection_Private'
typedef struct InstallerSection_Private *InstallerSection_Private;

// opaque 'InstallerState_Private'
typedef struct InstallerState_Private *InstallerState_Private;

// class 'InstallerPane'
typedef struct objc_object InstallerPane;

// class 'InstallerSection'
typedef struct objc_object InstallerSection;

// class 'InstallerState'
typedef struct objc_object InstallerState;

// getter for constant 'InstallerState_Choice_CustomLocation'
id _get_InstallerState_Choice_CustomLocation(void);

// getter for constant 'InstallerState_Choice_Identifier'
id _get_InstallerState_Choice_Identifier(void);

// getter for constant 'InstallerState_Choice_Installed'
id _get_InstallerState_Choice_Installed(void);

enum { InstallerDirectionBackward = 1 };

enum { InstallerDirectionForward = 0 };

enum { InstallerDirectionUndefined = 2 };

// method '-[InstallerPane contentView]'
id _IM_InstallerPane_contentView(InstallerPane *_self);

// method '-[InstallerPane didEnterPane:]'
void _IM_InstallerPane_didEnterPane_C(InstallerPane *_self, int dir);

// method '-[InstallerPane didExitPane:]'
void _IM_InstallerPane_didExitPane_C(InstallerPane *_self, int dir);

// method '-[InstallerPane firstKeyView]'
id _IM_InstallerPane_firstKeyView(InstallerPane *_self);

// method '-[InstallerPane gotoNextPane]'
BOOL _IM_InstallerPane_gotoNextPane(InstallerPane *_self);

// method '-[InstallerPane gotoPreviousPane]'
BOOL _IM_InstallerPane_gotoPreviousPane(InstallerPane *_self);

// method '-[InstallerPane initWithSection:]'
InstallerPane *_IM_InstallerPane_initWithSection_C(InstallerPane *_self, id parent);

// method '-[InstallerPane initialKeyView]'
id _IM_InstallerPane_initialKeyView(InstallerPane *_self);

// method '-[InstallerPane lastKeyView]'
id _IM_InstallerPane_lastKeyView(InstallerPane *_self);

// method '-[InstallerPane nextEnabled]'
BOOL _IM_InstallerPane_nextEnabled(InstallerPane *_self);

// method '-[InstallerPane nextPane]'
InstallerPane* _IM_InstallerPane_nextPane(InstallerPane *_self);

// method '-[InstallerPane previousEnabled]'
BOOL _IM_InstallerPane_previousEnabled(InstallerPane *_self);

// method '-[InstallerPane section]'
InstallerSection* _IM_InstallerPane_section(InstallerPane *_self);

// method '-[InstallerPane setNextEnabled:]'
void _IM_InstallerPane_setNextEnabled_C(InstallerPane *_self, BOOL enabled);

// method '-[InstallerPane setPreviousEnabled:]'
void _IM_InstallerPane_setPreviousEnabled_C(InstallerPane *_self, BOOL enabled);

// method '-[InstallerPane shouldExitPane:]'
BOOL _IM_InstallerPane_shouldExitPane_C(InstallerPane *_self, int dir);

// method '-[InstallerPane title]'
id _IM_InstallerPane_title(InstallerPane *_self);

// method '-[InstallerPane willEnterPane:]'
void _IM_InstallerPane_willEnterPane_C(InstallerPane *_self, int dir);

// method '-[InstallerPane willExitPane:]'
void _IM_InstallerPane_willExitPane_C(InstallerPane *_self, int dir);

// method '-[InstallerSection activePane]'
InstallerPane* _IM_InstallerSection_activePane(InstallerSection *_self);

// method '-[InstallerSection bundle]'
id _IM_InstallerSection_bundle(InstallerSection *_self);

// method '-[InstallerSection didLoadMainNib]'
void _IM_InstallerSection_didLoadMainNib(InstallerSection *_self);

// method '-[InstallerSection firstPane]'
InstallerPane* _IM_InstallerSection_firstPane(InstallerSection *_self);

// method '-[InstallerSection gotoPane:]'
BOOL _IM_InstallerSection_gotoPane_C(InstallerSection *_self, InstallerPane* pane);

// method '-[InstallerSection installerState]'
InstallerState* _IM_InstallerSection_installerState(InstallerSection *_self);

// method '-[InstallerSection sharedDictionary]'
id _IM_InstallerSection_sharedDictionary(InstallerSection *_self);

// method '-[InstallerSection shouldLoad]'
BOOL _IM_InstallerSection_shouldLoad(InstallerSection *_self);

// method '-[InstallerSection title]'
id _IM_InstallerSection_title(InstallerSection *_self);

// method '-[InstallerSection willLoadMainNib]'
void _IM_InstallerSection_willLoadMainNib(InstallerSection *_self);

// method '-[InstallerState choiceDictionaries]'
id _IM_InstallerState_choiceDictionaries(InstallerState *_self);

// method '-[InstallerState choiceDictionaryForIdentifier:]'
id _IM_InstallerState_choiceDictionaryForIdentifier_C(InstallerState *_self, id choiceIdentifier);

// method '-[InstallerState installStarted]'
BOOL _IM_InstallerState_installStarted(InstallerState *_self);

// method '-[InstallerState installSucceeded]'
BOOL _IM_InstallerState_installSucceeded(InstallerState *_self);

// method '-[InstallerState licenseAgreed]'
BOOL _IM_InstallerState_licenseAgreed(InstallerState *_self);

// method '-[InstallerState licenseAgreedLanguage]'
id _IM_InstallerState_licenseAgreedLanguage(InstallerState *_self);

// method '-[InstallerState targetPath]'
id _IM_InstallerState_targetPath(InstallerState *_self);

// method '-[InstallerState targetVolumePath]'
id _IM_InstallerState_targetVolumePath(InstallerState *_self);


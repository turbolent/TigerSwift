// Generated by W2C2BridgeGenerator
#include <stdarg.h>

// CoreFoundation type 'ABAddressBookRef'
typedef struct __ABAddressBookRef *ABAddressBookRef;

// CoreFoundation type 'ABGroupRef'
typedef struct __ABGroup *ABGroupRef;

// CoreFoundation type 'ABMultiValueRef'
typedef struct __ABMultiValue *ABMultiValueRef;

// CoreFoundation type 'ABMutableMultiValueRef'
typedef struct __ABMultiValue *ABMutableMultiValueRef;

// CoreFoundation type 'ABPersonRef'
typedef struct __ABPerson *ABPersonRef;

// CoreFoundation type 'ABPickerRef'
typedef struct OpaqueABPicker *ABPickerRef;

// CoreFoundation type 'ABRecordRef'
typedef void *ABRecordRef;

// CoreFoundation type 'ABSearchElementRef'
typedef struct __ABSearchElementRef *ABSearchElementRef;

// class 'ABAddressBook'
typedef struct objc_object ABAddressBook;

// class 'ABGroup'
typedef struct objc_object ABGroup;

// class 'ABMultiValue'
typedef struct objc_object ABMultiValue;

// class 'ABMutableMultiValue'
typedef struct objc_object ABMutableMultiValue;

// class 'ABPeoplePickerView'
typedef struct objc_object ABPeoplePickerView;

// class 'ABPerson'
typedef struct objc_object ABPerson;

// class 'ABRecord'
typedef struct objc_object ABRecord;

// class 'ABSearchElement'
typedef struct objc_object ABSearchElement;

// class 'NSObject'
typedef struct objc_object NSObject;

// getter for constant 'ABPeoplePickerDisplayedPropertyDidChangeNotification'
id _get_ABPeoplePickerDisplayedPropertyDidChangeNotification(void);

// getter for constant 'ABPeoplePickerGroupSelectionDidChangeNotification'
id _get_ABPeoplePickerGroupSelectionDidChangeNotification(void);

// getter for constant 'ABPeoplePickerNameSelectionDidChangeNotification'
id _get_ABPeoplePickerNameSelectionDidChangeNotification(void);

// getter for constant 'ABPeoplePickerValueSelectionDidChangeNotification'
id _get_ABPeoplePickerValueSelectionDidChangeNotification(void);

// getter for constant 'kABAIMHomeLabel'
id _get_kABAIMHomeLabel(void);

// getter for constant 'kABAIMInstantProperty'
id _get_kABAIMInstantProperty(void);

// getter for constant 'kABAIMWorkLabel'
id _get_kABAIMWorkLabel(void);

// getter for constant 'kABAddressCityKey'
id _get_kABAddressCityKey(void);

// getter for constant 'kABAddressCountryCodeKey'
id _get_kABAddressCountryCodeKey(void);

// getter for constant 'kABAddressCountryKey'
id _get_kABAddressCountryKey(void);

// getter for constant 'kABAddressHomeLabel'
id _get_kABAddressHomeLabel(void);

// getter for constant 'kABAddressProperty'
id _get_kABAddressProperty(void);

// getter for constant 'kABAddressStateKey'
id _get_kABAddressStateKey(void);

// getter for constant 'kABAddressStreetKey'
id _get_kABAddressStreetKey(void);

// getter for constant 'kABAddressWorkLabel'
id _get_kABAddressWorkLabel(void);

// getter for constant 'kABAddressZIPKey'
id _get_kABAddressZIPKey(void);

// getter for constant 'kABAnniversaryLabel'
id _get_kABAnniversaryLabel(void);

// getter for constant 'kABAssistantLabel'
id _get_kABAssistantLabel(void);

// getter for constant 'kABBirthdayProperty'
id _get_kABBirthdayProperty(void);

// getter for constant 'kABBrotherLabel'
id _get_kABBrotherLabel(void);

// getter for constant 'kABChildLabel'
id _get_kABChildLabel(void);

// getter for constant 'kABCreationDateProperty'
id _get_kABCreationDateProperty(void);

// getter for constant 'kABDatabaseChangedExternallyNotification'
id _get_kABDatabaseChangedExternallyNotification(void);

// getter for constant 'kABDatabaseChangedNotification'
id _get_kABDatabaseChangedNotification(void);

// getter for constant 'kABDeletedRecords'
id _get_kABDeletedRecords(void);

// getter for constant 'kABDepartmentProperty'
id _get_kABDepartmentProperty(void);

// getter for constant 'kABEmailHomeLabel'
id _get_kABEmailHomeLabel(void);

// getter for constant 'kABEmailProperty'
id _get_kABEmailProperty(void);

// getter for constant 'kABEmailWorkLabel'
id _get_kABEmailWorkLabel(void);

// getter for constant 'kABFatherLabel'
id _get_kABFatherLabel(void);

// getter for constant 'kABFirstNamePhoneticProperty'
id _get_kABFirstNamePhoneticProperty(void);

// getter for constant 'kABFirstNameProperty'
id _get_kABFirstNameProperty(void);

// getter for constant 'kABFriendLabel'
id _get_kABFriendLabel(void);

// getter for constant 'kABGroupNameProperty'
id _get_kABGroupNameProperty(void);

// getter for constant 'kABHomeLabel'
id _get_kABHomeLabel(void);

// getter for constant 'kABHomePageLabel'
id _get_kABHomePageLabel(void);

// getter for constant 'kABHomePageProperty'
id _get_kABHomePageProperty(void);

// getter for constant 'kABICQHomeLabel'
id _get_kABICQHomeLabel(void);

// getter for constant 'kABICQInstantProperty'
id _get_kABICQInstantProperty(void);

// getter for constant 'kABICQWorkLabel'
id _get_kABICQWorkLabel(void);

// getter for constant 'kABInsertedRecords'
id _get_kABInsertedRecords(void);

// getter for constant 'kABJabberHomeLabel'
id _get_kABJabberHomeLabel(void);

// getter for constant 'kABJabberInstantProperty'
id _get_kABJabberInstantProperty(void);

// getter for constant 'kABJabberWorkLabel'
id _get_kABJabberWorkLabel(void);

// getter for constant 'kABJobTitleProperty'
id _get_kABJobTitleProperty(void);

// getter for constant 'kABLastNamePhoneticProperty'
id _get_kABLastNamePhoneticProperty(void);

// getter for constant 'kABLastNameProperty'
id _get_kABLastNameProperty(void);

// getter for constant 'kABMSNHomeLabel'
id _get_kABMSNHomeLabel(void);

// getter for constant 'kABMSNInstantProperty'
id _get_kABMSNInstantProperty(void);

// getter for constant 'kABMSNWorkLabel'
id _get_kABMSNWorkLabel(void);

// getter for constant 'kABMaidenNameProperty'
id _get_kABMaidenNameProperty(void);

// getter for constant 'kABManagerLabel'
id _get_kABManagerLabel(void);

// getter for constant 'kABMiddleNamePhoneticProperty'
id _get_kABMiddleNamePhoneticProperty(void);

// getter for constant 'kABMiddleNameProperty'
id _get_kABMiddleNameProperty(void);

// getter for constant 'kABModificationDateProperty'
id _get_kABModificationDateProperty(void);

// getter for constant 'kABMotherLabel'
id _get_kABMotherLabel(void);

// getter for constant 'kABNicknameProperty'
id _get_kABNicknameProperty(void);

// getter for constant 'kABNoteProperty'
id _get_kABNoteProperty(void);

// getter for constant 'kABOrganizationProperty'
id _get_kABOrganizationProperty(void);

// getter for constant 'kABOtherDatesProperty'
id _get_kABOtherDatesProperty(void);

// getter for constant 'kABOtherLabel'
id _get_kABOtherLabel(void);

// getter for constant 'kABParentLabel'
id _get_kABParentLabel(void);

// getter for constant 'kABPartnerLabel'
id _get_kABPartnerLabel(void);

// getter for constant 'kABPersonFlags'
id _get_kABPersonFlags(void);

// getter for constant 'kABPhoneHomeFAXLabel'
id _get_kABPhoneHomeFAXLabel(void);

// getter for constant 'kABPhoneHomeLabel'
id _get_kABPhoneHomeLabel(void);

// getter for constant 'kABPhoneMainLabel'
id _get_kABPhoneMainLabel(void);

// getter for constant 'kABPhoneMobileLabel'
id _get_kABPhoneMobileLabel(void);

// getter for constant 'kABPhonePagerLabel'
id _get_kABPhonePagerLabel(void);

// getter for constant 'kABPhoneProperty'
id _get_kABPhoneProperty(void);

// getter for constant 'kABPhoneWorkFAXLabel'
id _get_kABPhoneWorkFAXLabel(void);

// getter for constant 'kABPhoneWorkLabel'
id _get_kABPhoneWorkLabel(void);

// getter for constant 'kABRelatedNamesProperty'
id _get_kABRelatedNamesProperty(void);

// getter for constant 'kABSisterLabel'
id _get_kABSisterLabel(void);

// getter for constant 'kABSpouseLabel'
id _get_kABSpouseLabel(void);

// getter for constant 'kABSuffixProperty'
id _get_kABSuffixProperty(void);

// getter for constant 'kABTitleProperty'
id _get_kABTitleProperty(void);

// getter for constant 'kABUIDProperty'
id _get_kABUIDProperty(void);

// getter for constant 'kABURLsProperty'
id _get_kABURLsProperty(void);

// getter for constant 'kABUpdatedRecords'
id _get_kABUpdatedRecords(void);

// getter for constant 'kABWorkLabel'
id _get_kABWorkLabel(void);

// getter for constant 'kABYahooHomeLabel'
id _get_kABYahooHomeLabel(void);

// getter for constant 'kABYahooInstantProperty'
id _get_kABYahooInstantProperty(void);

// getter for constant 'kABYahooWorkLabel'
id _get_kABYahooWorkLabel(void);

enum { ABMultipleValueSelection = 2 };

enum { ABNoValueSelection = 0 };

enum { ABSingleValueSelection = 1 };

enum { kABArrayProperty = 5 };

enum { kABBitsInBitFieldMatch = 11 };

enum { kABContainsSubString = 7 };

enum { kABContainsSubStringCaseInsensitive = 8 };

enum { kABDataProperty = 7 };

enum { kABDateProperty = 4 };

enum { kABDefaultNameOrdering = 0 };

enum { kABDictionaryProperty = 6 };

enum { kABDoesNotContainSubString = 12 };

enum { kABDoesNotContainSubStringCaseInsensitive = 13 };

enum { kABEqual = 0 };

enum { kABEqualCaseInsensitive = 6 };

enum { kABErrorInProperty = 0 };

enum { kABFirstNameFirst = 32 };

enum { kABGreaterThan = 4 };

enum { kABGreaterThanOrEqual = 5 };

enum { kABIntegerProperty = 2 };

enum { kABLastNameFirst = 16 };

enum { kABLessThan = 2 };

enum { kABLessThanOrEqual = 3 };

enum { kABMultiArrayProperty = 261 };

enum { kABMultiDataProperty = 263 };

enum { kABMultiDateProperty = 260 };

enum { kABMultiDictionaryProperty = 262 };

enum { kABMultiIntegerProperty = 258 };

enum { kABMultiRealProperty = 259 };

enum { kABMultiStringProperty = 257 };

enum { kABMultiValueMask = 256 };

enum { kABNameOrderingMask = 56 };

enum { kABNotEqual = 1 };

enum { kABNotEqualCaseInsensitive = 14 };

enum { kABNotWithinIntervalAroundToday = 19 };

enum { kABNotWithinIntervalAroundTodayYearless = 20 };

enum { kABNotWithinIntervalFromToday = 23 };

enum { kABNotWithinIntervalFromTodayYearless = 24 };

enum { kABPickerAllowGroupSelection = 4 };

enum { kABPickerAllowMultipleSelection = 8 };

enum { kABPickerMultipleValueSelection = 2 };

enum { kABPickerSingleValueSelection = 1 };

enum { kABPrefixMatch = 9 };

enum { kABPrefixMatchCaseInsensitive = 10 };

enum { kABRealProperty = 3 };

enum { kABSearchAnd = 0 };

enum { kABSearchOr = 1 };

enum { kABShowAsCompany = 1 };

enum { kABShowAsMask = 7 };

enum { kABShowAsPerson = 0 };

enum { kABStringProperty = 1 };

enum { kABSuffixMatch = 15 };

enum { kABSuffixMatchCaseInsensitive = 16 };

enum { kABWithinIntervalAroundToday = 17 };

enum { kABWithinIntervalAroundTodayYearless = 18 };

enum { kABWithinIntervalFromToday = 21 };

enum { kABWithinIntervalFromTodayYearless = 22 };

enum { kEventABPeoplePickerDisplayedPropertyChanged = 4 };

enum { kEventABPeoplePickerGroupDoubleClicked = 5 };

enum { kEventABPeoplePickerGroupSelectionChanged = 1 };

enum { kEventABPeoplePickerNameDoubleClicked = 6 };

enum { kEventABPeoplePickerNameSelectionChanged = 2 };

enum { kEventABPeoplePickerValueSelectionChanged = 3 };

enum { kEventClassABPeoplePicker = 1633841264 };

enum { kEventParamABPickerRef = 1633841264 };

// function 'ABAddPropertiesAndTypes'
int ABAddPropertiesAndTypes(struct __ABAddressBookRef *addressBook, struct __CFString *recordType, struct __CFDictionary *propertiesAnTypes);

// function 'ABAddRecord'
_Bool ABAddRecord(struct __ABAddressBookRef *addressBook, id record);

// function 'ABCancelLoadingImageDataForTag'
void ABCancelLoadingImageDataForTag(int tag);

// function 'ABCopyArrayOfAllGroups'
struct __CFArray *ABCopyArrayOfAllGroups(struct __ABAddressBookRef *addressBook);

// function 'ABCopyArrayOfAllPeople'
struct __CFArray *ABCopyArrayOfAllPeople(struct __ABAddressBookRef *addressBook);

// function 'ABCopyArrayOfMatchingRecords'
struct __CFArray *ABCopyArrayOfMatchingRecords(struct __ABAddressBookRef *addressBook, struct __ABSearchElementRef *search);

// function 'ABCopyArrayOfPropertiesForRecordType'
struct __CFArray *ABCopyArrayOfPropertiesForRecordType(struct __ABAddressBookRef *addressBook, struct __CFString *recordType);

// function 'ABCopyDefaultCountryCode'
struct __CFString *ABCopyDefaultCountryCode(struct __ABAddressBookRef *addressBook);

// function 'ABCopyLocalizedPropertyOrLabel'
struct __CFString *ABCopyLocalizedPropertyOrLabel(struct __CFString *labelOrProperty);

// function 'ABCopyRecordForUniqueId'
id ABCopyRecordForUniqueId(struct __ABAddressBookRef *addressBook, struct __CFString *uniqueId);

// function 'ABCopyRecordTypeFromUniqueId'
struct __CFString *ABCopyRecordTypeFromUniqueId(struct __ABAddressBookRef *addressBook, struct __CFString *uniqueId);

// function 'ABCreateFormattedAddressFromDictionary'
struct __CFString *ABCreateFormattedAddressFromDictionary(struct __ABAddressBookRef *addressBook, struct __CFDictionary *address);

// function 'ABGetMe'
struct __ABPerson *ABGetMe(struct __ABAddressBookRef *addressBook);

// function 'ABGetSharedAddressBook'
struct __ABAddressBookRef *ABGetSharedAddressBook(void);

// function 'ABGroupAddGroup'
_Bool ABGroupAddGroup(struct __ABGroup *group, struct __ABGroup *groupToAdd);

// function 'ABGroupAddMember'
_Bool ABGroupAddMember(struct __ABGroup *group, struct __ABPerson *personToAdd);

// function 'ABGroupCopyArrayOfAllMembers'
struct __CFArray *ABGroupCopyArrayOfAllMembers(struct __ABGroup *group);

// function 'ABGroupCopyArrayOfAllSubgroups'
struct __CFArray *ABGroupCopyArrayOfAllSubgroups(struct __ABGroup *group);

// function 'ABGroupCopyDistributionIdentifier'
struct __CFString *ABGroupCopyDistributionIdentifier(struct __ABGroup *group, struct __ABPerson *person, struct __CFString *property);

// function 'ABGroupCopyParentGroups'
struct __CFArray *ABGroupCopyParentGroups(struct __ABGroup *group);

// function 'ABGroupCreate'
struct __ABGroup *ABGroupCreate(void);

// function 'ABGroupCreateSearchElement'
struct __ABSearchElementRef *ABGroupCreateSearchElement(struct __CFString *property, struct __CFString *label, struct __CFString *key, id value, int comparison);

// function 'ABGroupRemoveGroup'
_Bool ABGroupRemoveGroup(struct __ABGroup *group, struct __ABGroup *groupToRemove);

// function 'ABGroupRemoveMember'
_Bool ABGroupRemoveMember(struct __ABGroup *group, struct __ABPerson *personToRemove);

// function 'ABGroupSetDistributionIdentifier'
_Bool ABGroupSetDistributionIdentifier(struct __ABGroup *group, struct __ABPerson *person, struct __CFString *property, struct __CFString *identifier);

// function 'ABHasUnsavedChanges'
_Bool ABHasUnsavedChanges(struct __ABAddressBookRef *addressBook);

// function 'ABLocalizedPropertyOrLabel'
id ABLocalizedPropertyOrLabel(id propertyOrLabel);

// function 'ABMultiValueAdd'
_Bool ABMultiValueAdd(struct __ABMultiValue *multiValue, id value, struct __CFString *label, struct __CFString **outIdentifier);

// function 'ABMultiValueCopyIdentifierAtIndex'
struct __CFString *ABMultiValueCopyIdentifierAtIndex(struct __ABMultiValue *multiValue, int index);

// function 'ABMultiValueCopyLabelAtIndex'
struct __CFString *ABMultiValueCopyLabelAtIndex(struct __ABMultiValue *multiValue, int index);

// function 'ABMultiValueCopyPrimaryIdentifier'
struct __CFString *ABMultiValueCopyPrimaryIdentifier(struct __ABMultiValue *multiValue);

// function 'ABMultiValueCopyValueAtIndex'
id ABMultiValueCopyValueAtIndex(struct __ABMultiValue *multiValue, int index);

// function 'ABMultiValueCount'
unsigned int ABMultiValueCount(struct __ABMultiValue *multiValue);

// function 'ABMultiValueCreate'
struct __ABMultiValue *ABMultiValueCreate(void);

// function 'ABMultiValueCreateCopy'
struct __ABMultiValue *ABMultiValueCreateCopy(struct __ABMultiValue *multiValue);

// function 'ABMultiValueCreateMutable'
struct __ABMultiValue *ABMultiValueCreateMutable(void);

// function 'ABMultiValueCreateMutableCopy'
struct __ABMultiValue *ABMultiValueCreateMutableCopy(struct __ABMultiValue *multiValue);

// function 'ABMultiValueIndexForIdentifier'
int ABMultiValueIndexForIdentifier(struct __ABMultiValue *multiValue, struct __CFString *identifier);

// function 'ABMultiValueInsert'
_Bool ABMultiValueInsert(struct __ABMultiValue *multiValue, id value, struct __CFString *label, int index, struct __CFString **outIdentifier);

// function 'ABMultiValuePropertyType'
int ABMultiValuePropertyType(struct __ABMultiValue *multiValue);

// function 'ABMultiValueRemove'
_Bool ABMultiValueRemove(struct __ABMultiValue *multiValue, int index);

// function 'ABMultiValueReplaceLabel'
_Bool ABMultiValueReplaceLabel(struct __ABMultiValue *multiValue, struct __CFString *label, int index);

// function 'ABMultiValueReplaceValue'
_Bool ABMultiValueReplaceValue(struct __ABMultiValue *multiValue, id value, int index);

// function 'ABMultiValueSetPrimaryIdentifier'
_Bool ABMultiValueSetPrimaryIdentifier(struct __ABMultiValue *multiValue, struct __CFString *identifier);

// function 'ABPersonCopyImageData'
struct __CFData *ABPersonCopyImageData(struct __ABPerson *person);

// function 'ABPersonCopyParentGroups'
struct __CFArray *ABPersonCopyParentGroups(struct __ABPerson *person);

// function 'ABPersonCopyVCardRepresentation'
struct __CFData *ABPersonCopyVCardRepresentation(struct __ABPerson *person);

// function 'ABPersonCreate'
struct __ABPerson *ABPersonCreate(void);

// function 'ABPersonCreateSearchElement'
struct __ABSearchElementRef *ABPersonCreateSearchElement(struct __CFString *property, struct __CFString *label, struct __CFString *key, id value, int comparison);

// function 'ABPersonCreateWithVCardRepresentation'
struct __ABPerson *ABPersonCreateWithVCardRepresentation(struct __CFData *vCard);

// function 'ABPersonSetImageData'
_Bool ABPersonSetImageData(struct __ABPerson *person, struct __CFData *imageData);

// function 'ABPickerAddProperty'
void ABPickerAddProperty(struct OpaqueABPicker *inPicker, struct __CFString *inProperty);

// function 'ABPickerChangeAttributes'
void ABPickerChangeAttributes(struct OpaqueABPicker *inPicker, unsigned long inAttributesToSet, unsigned long inAttributesToClear);

// function 'ABPickerClearSearchField'
void ABPickerClearSearchField(struct OpaqueABPicker *inPicker);

// function 'ABPickerCopyColumnTitle'
struct __CFString *ABPickerCopyColumnTitle(struct OpaqueABPicker *inPicker, struct __CFString *inProperty);

// function 'ABPickerCopyDisplayedProperty'
struct __CFString *ABPickerCopyDisplayedProperty(struct OpaqueABPicker *inPicker);

// function 'ABPickerCopyProperties'
struct __CFArray *ABPickerCopyProperties(struct OpaqueABPicker *inPicker);

// function 'ABPickerCopySelectedGroups'
struct __CFArray *ABPickerCopySelectedGroups(struct OpaqueABPicker *inPicker);

// function 'ABPickerCopySelectedIdentifiers'
struct __CFArray *ABPickerCopySelectedIdentifiers(struct OpaqueABPicker *inPicker, struct __ABPerson *inPerson);

// function 'ABPickerCopySelectedRecords'
struct __CFArray *ABPickerCopySelectedRecords(struct OpaqueABPicker *inPicker);

// function 'ABPickerCopySelectedValues'
struct __CFArray *ABPickerCopySelectedValues(struct OpaqueABPicker *inPicker);

// function 'ABPickerCreate'
struct OpaqueABPicker *ABPickerCreate(void);

// function 'ABPickerDeselectAll'
void ABPickerDeselectAll(struct OpaqueABPicker *inPicker);

// function 'ABPickerDeselectGroup'
void ABPickerDeselectGroup(struct OpaqueABPicker *inPicker, struct __ABGroup *inGroup);

// function 'ABPickerDeselectIdentifier'
void ABPickerDeselectIdentifier(struct OpaqueABPicker *inPicker, struct __ABPerson *inPerson, struct __CFString *inIdentifier);

// function 'ABPickerDeselectRecord'
void ABPickerDeselectRecord(struct OpaqueABPicker *inPicker, id inRecord);

// function 'ABPickerEditInAddressBook'
void ABPickerEditInAddressBook(struct OpaqueABPicker *inPicker);

// function 'ABPickerGetAttributes'
unsigned long ABPickerGetAttributes(struct OpaqueABPicker *inPicker);

// function 'ABPickerGetDelegate'
struct OpaqueHIObjectRef *ABPickerGetDelegate(struct OpaqueABPicker *inPicker);

// function 'ABPickerGetFrame'
void ABPickerGetFrame(struct OpaqueABPicker *inPicker, struct CGRect *outFrame);

// function 'ABPickerIsVisible'
_Bool ABPickerIsVisible(struct OpaqueABPicker *inPicker);

// function 'ABPickerRemoveProperty'
void ABPickerRemoveProperty(struct OpaqueABPicker *inPicker, struct __CFString *inProperty);

// function 'ABPickerSelectGroup'
void ABPickerSelectGroup(struct OpaqueABPicker *inPicker, struct __ABGroup *inGroup, _Bool inExtendSelection);

// function 'ABPickerSelectIdentifier'
void ABPickerSelectIdentifier(struct OpaqueABPicker *inPicker, struct __ABPerson *inPerson, struct __CFString *inIdentifier, _Bool inExtendSelection);

// function 'ABPickerSelectInAddressBook'
void ABPickerSelectInAddressBook(struct OpaqueABPicker *inPicker);

// function 'ABPickerSelectRecord'
void ABPickerSelectRecord(struct OpaqueABPicker *inPicker, id inRecord, _Bool inExtendSelection);

// function 'ABPickerSetColumnTitle'
void ABPickerSetColumnTitle(struct OpaqueABPicker *inPicker, struct __CFString *inTitle, struct __CFString *inProperty);

// function 'ABPickerSetDelegate'
void ABPickerSetDelegate(struct OpaqueABPicker *inPicker, struct OpaqueHIObjectRef *inDelegate);

// function 'ABPickerSetDisplayedProperty'
void ABPickerSetDisplayedProperty(struct OpaqueABPicker *inPicker, struct __CFString *inProperty);

// function 'ABPickerSetFrame'
void ABPickerSetFrame(struct OpaqueABPicker *inPicker, const struct CGRect* inFrame);

// function 'ABPickerSetVisibility'
void ABPickerSetVisibility(struct OpaqueABPicker *inPicker, _Bool visible);

// function 'ABRecordCopyRecordType'
struct __CFString *ABRecordCopyRecordType(id record);

// function 'ABRecordCopyUniqueId'
struct __CFString *ABRecordCopyUniqueId(id record);

// function 'ABRecordCopyValue'
id ABRecordCopyValue(id record, struct __CFString *property);

// function 'ABRecordCreateCopy'
id ABRecordCreateCopy(id record);

// function 'ABRecordIsReadOnly'
_Bool ABRecordIsReadOnly(id record);

// function 'ABRecordRemoveValue'
_Bool ABRecordRemoveValue(id record, struct __CFString *property);

// function 'ABRecordSetValue'
_Bool ABRecordSetValue(id record, struct __CFString *property, id value);

// function 'ABRemoveProperties'
int ABRemoveProperties(struct __ABAddressBookRef *addressBook, struct __CFString *recordType, struct __CFArray *properties);

// function 'ABRemoveRecord'
_Bool ABRemoveRecord(struct __ABAddressBookRef *addressBook, id record);

// function 'ABSave'
_Bool ABSave(struct __ABAddressBookRef *addressBook);

// function 'ABSearchElementCreateWithConjunction'
struct __ABSearchElementRef *ABSearchElementCreateWithConjunction(int conjunction, struct __CFArray *childrenSearchElement);

// function 'ABSearchElementMatchesRecord'
_Bool ABSearchElementMatchesRecord(struct __ABSearchElementRef *searchElement, id record);

// function 'ABSetMe'
void ABSetMe(struct __ABAddressBookRef *addressBook, struct __ABPerson *moi);

// function 'ABTypeOfProperty'
int ABTypeOfProperty(struct __ABAddressBookRef *addressBook, struct __CFString *recordType, struct __CFString *property);

// method '-[ABAddressBook addRecord:]'
BOOL _IM_ABAddressBook_addRecord_C(ABAddressBook *_self, ABRecord* record);

// method '-[ABAddressBook defaultCountryCode]'
id _IM_ABAddressBook_defaultCountryCode(ABAddressBook *_self);

// method '-[ABAddressBook defaultNameOrdering]'
int _IM_ABAddressBook_defaultNameOrdering(ABAddressBook *_self);

// method '-[ABAddressBook formattedAddressFromDictionary:]'
id _IM_ABAddressBook_formattedAddressFromDictionary_C(ABAddressBook *_self, id address);

// method '-[ABAddressBook groups]'
id _IM_ABAddressBook_groups(ABAddressBook *_self);

// method '-[ABAddressBook hasUnsavedChanges]'
BOOL _IM_ABAddressBook_hasUnsavedChanges(ABAddressBook *_self);

// method '-[ABAddressBook me]'
ABPerson* _IM_ABAddressBook_me(ABAddressBook *_self);

// method '-[ABAddressBook people]'
id _IM_ABAddressBook_people(ABAddressBook *_self);

// method '-[ABAddressBook recordClassFromUniqueId:]'
id _IM_ABAddressBook_recordClassFromUniqueId_C(ABAddressBook *_self, id uniqueId);

// method '-[ABAddressBook recordForUniqueId:]'
ABRecord* _IM_ABAddressBook_recordForUniqueId_C(ABAddressBook *_self, id uniqueId);

// method '-[ABAddressBook recordsMatchingSearchElement:]'
id _IM_ABAddressBook_recordsMatchingSearchElement_C(ABAddressBook *_self, ABSearchElement* search);

// method '-[ABAddressBook removeRecord:]'
BOOL _IM_ABAddressBook_removeRecord_C(ABAddressBook *_self, ABRecord* record);

// method '-[ABAddressBook save]'
BOOL _IM_ABAddressBook_save(ABAddressBook *_self);

// method '-[ABAddressBook setMe:]'
void _IM_ABAddressBook_setMe_C(ABAddressBook *_self, ABPerson* moi);

// method '+[ABAddressBook sharedAddressBook]'
ABAddressBook* _CM_ABAddressBook_sharedAddressBook(Class _class);

// method '-[ABGroup addMember:]'
BOOL _IM_ABGroup_addMember_C(ABGroup *_self, ABPerson* person);

// method '+[ABGroup addPropertiesAndTypes:]'
int _CM_ABGroup_addPropertiesAndTypes_C(Class _class, id properties);

// method '-[ABGroup addSubgroup:]'
BOOL _IM_ABGroup_addSubgroup_C(ABGroup *_self, ABGroup* group);

// method '-[ABGroup distributionIdentifierForProperty:person:]'
id _IM_ABGroup_distributionIdentifierForProperty_Cperson_C(ABGroup *_self, id property, ABPerson* person);

// method '-[ABGroup members]'
id _IM_ABGroup_members(ABGroup *_self);

// method '-[ABGroup parentGroups]'
id _IM_ABGroup_parentGroups(ABGroup *_self);

// method '+[ABGroup properties]'
id _CM_ABGroup_properties(Class _class);

// method '-[ABGroup removeMember:]'
BOOL _IM_ABGroup_removeMember_C(ABGroup *_self, ABPerson* person);

// method '+[ABGroup removeProperties:]'
int _CM_ABGroup_removeProperties_C(Class _class, id properties);

// method '-[ABGroup removeSubgroup:]'
BOOL _IM_ABGroup_removeSubgroup_C(ABGroup *_self, ABGroup* group);

// method '+[ABGroup searchElementForProperty:label:key:value:comparison:]'
ABSearchElement* _CM_ABGroup_searchElementForProperty_Clabel_Ckey_Cvalue_Ccomparison_C(Class _class, id property, id label, id key, id value, int comparison);

// method '-[ABGroup setDistributionIdentifier:forProperty:person:]'
BOOL _IM_ABGroup_setDistributionIdentifier_CforProperty_Cperson_C(ABGroup *_self, id identifier, id property, ABPerson* person);

// method '-[ABGroup subgroups]'
id _IM_ABGroup_subgroups(ABGroup *_self);

// method '+[ABGroup typeOfProperty:]'
int _CM_ABGroup_typeOfProperty_C(Class _class, id property);

// method '-[ABMultiValue count]'
unsigned int _IM_ABMultiValue_count(ABMultiValue *_self);

// method '-[ABMultiValue identifierAtIndex:]'
id _IM_ABMultiValue_identifierAtIndex_C(ABMultiValue *_self, unsigned int index);

// method '-[ABMultiValue indexForIdentifier:]'
unsigned int _IM_ABMultiValue_indexForIdentifier_C(ABMultiValue *_self, id identifier);

// method '-[ABMultiValue labelAtIndex:]'
id _IM_ABMultiValue_labelAtIndex_C(ABMultiValue *_self, unsigned int index);

// method '-[ABMultiValue primaryIdentifier]'
id _IM_ABMultiValue_primaryIdentifier(ABMultiValue *_self);

// method '-[ABMultiValue propertyType]'
int _IM_ABMultiValue_propertyType(ABMultiValue *_self);

// method '-[ABMultiValue valueAtIndex:]'
id _IM_ABMultiValue_valueAtIndex_C(ABMultiValue *_self, unsigned int index);

// method '-[ABMutableMultiValue addValue:withLabel:]'
id _IM_ABMutableMultiValue_addValue_CwithLabel_C(ABMutableMultiValue *_self, id value, id label);

// method '-[ABMutableMultiValue insertValue:withLabel:atIndex:]'
id _IM_ABMutableMultiValue_insertValue_CwithLabel_CatIndex_C(ABMutableMultiValue *_self, id value, id label, unsigned int index);

// method '-[ABMutableMultiValue removeValueAndLabelAtIndex:]'
BOOL _IM_ABMutableMultiValue_removeValueAndLabelAtIndex_C(ABMutableMultiValue *_self, unsigned int index);

// method '-[ABMutableMultiValue replaceLabelAtIndex:withLabel:]'
BOOL _IM_ABMutableMultiValue_replaceLabelAtIndex_CwithLabel_C(ABMutableMultiValue *_self, unsigned int index, id label);

// method '-[ABMutableMultiValue replaceValueAtIndex:withValue:]'
BOOL _IM_ABMutableMultiValue_replaceValueAtIndex_CwithValue_C(ABMutableMultiValue *_self, unsigned int index, id value);

// method '-[ABMutableMultiValue setPrimaryIdentifier:]'
BOOL _IM_ABMutableMultiValue_setPrimaryIdentifier_C(ABMutableMultiValue *_self, id identifier);

// method '-[ABPeoplePickerView accessoryView]'
id _IM_ABPeoplePickerView_accessoryView(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView addProperty:]'
void _IM_ABPeoplePickerView_addProperty_C(ABPeoplePickerView *_self, id property);

// method '-[ABPeoplePickerView allowsGroupSelection]'
BOOL _IM_ABPeoplePickerView_allowsGroupSelection(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView allowsMultipleSelection]'
BOOL _IM_ABPeoplePickerView_allowsMultipleSelection(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView autosaveName]'
id _IM_ABPeoplePickerView_autosaveName(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView clearSearchField:]'
void _IM_ABPeoplePickerView_clearSearchField_C(ABPeoplePickerView *_self, id sender);

// method '-[ABPeoplePickerView columnTitleForProperty:]'
id _IM_ABPeoplePickerView_columnTitleForProperty_C(ABPeoplePickerView *_self, id property);

// method '-[ABPeoplePickerView deselectAll:]'
void _IM_ABPeoplePickerView_deselectAll_C(ABPeoplePickerView *_self, id sender);

// method '-[ABPeoplePickerView deselectGroup:]'
void _IM_ABPeoplePickerView_deselectGroup_C(ABPeoplePickerView *_self, ABGroup* group);

// method '-[ABPeoplePickerView deselectIdentifier:forPerson:]'
void _IM_ABPeoplePickerView_deselectIdentifier_CforPerson_C(ABPeoplePickerView *_self, id identifier, ABPerson* person);

// method '-[ABPeoplePickerView deselectRecord:]'
void _IM_ABPeoplePickerView_deselectRecord_C(ABPeoplePickerView *_self, ABRecord* record);

// method '-[ABPeoplePickerView displayedProperty]'
id _IM_ABPeoplePickerView_displayedProperty(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView editInAddressBook:]'
void _IM_ABPeoplePickerView_editInAddressBook_C(ABPeoplePickerView *_self, id sender);

// method '-[ABPeoplePickerView groupDoubleAction]'
SEL _IM_ABPeoplePickerView_groupDoubleAction(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView nameDoubleAction]'
SEL _IM_ABPeoplePickerView_nameDoubleAction(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView properties]'
id _IM_ABPeoplePickerView_properties(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView removeProperty:]'
void _IM_ABPeoplePickerView_removeProperty_C(ABPeoplePickerView *_self, id property);

// method '-[ABPeoplePickerView selectGroup:byExtendingSelection:]'
void _IM_ABPeoplePickerView_selectGroup_CbyExtendingSelection_C(ABPeoplePickerView *_self, ABGroup* group, BOOL extend);

// method '-[ABPeoplePickerView selectIdentifier:forPerson:byExtendingSelection:]'
void _IM_ABPeoplePickerView_selectIdentifier_CforPerson_CbyExtendingSelection_C(ABPeoplePickerView *_self, id identifier, ABPerson* person, BOOL extend);

// method '-[ABPeoplePickerView selectInAddressBook:]'
void _IM_ABPeoplePickerView_selectInAddressBook_C(ABPeoplePickerView *_self, id sender);

// method '-[ABPeoplePickerView selectRecord:byExtendingSelection:]'
void _IM_ABPeoplePickerView_selectRecord_CbyExtendingSelection_C(ABPeoplePickerView *_self, ABRecord* record, BOOL extend);

// method '-[ABPeoplePickerView selectedGroups]'
id _IM_ABPeoplePickerView_selectedGroups(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView selectedIdentifiersForPerson:]'
id _IM_ABPeoplePickerView_selectedIdentifiersForPerson_C(ABPeoplePickerView *_self, ABPerson* person);

// method '-[ABPeoplePickerView selectedRecords]'
id _IM_ABPeoplePickerView_selectedRecords(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView selectedValues]'
id _IM_ABPeoplePickerView_selectedValues(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView setAccessoryView:]'
void _IM_ABPeoplePickerView_setAccessoryView_C(ABPeoplePickerView *_self, id accessory);

// method '-[ABPeoplePickerView setAllowsGroupSelection:]'
void _IM_ABPeoplePickerView_setAllowsGroupSelection_C(ABPeoplePickerView *_self, BOOL flag);

// method '-[ABPeoplePickerView setAllowsMultipleSelection:]'
void _IM_ABPeoplePickerView_setAllowsMultipleSelection_C(ABPeoplePickerView *_self, BOOL flag);

// method '-[ABPeoplePickerView setAutosaveName:]'
void _IM_ABPeoplePickerView_setAutosaveName_C(ABPeoplePickerView *_self, id name);

// method '-[ABPeoplePickerView setColumnTitle:forProperty:]'
void _IM_ABPeoplePickerView_setColumnTitle_CforProperty_C(ABPeoplePickerView *_self, id title, id property);

// method '-[ABPeoplePickerView setDisplayedProperty:]'
void _IM_ABPeoplePickerView_setDisplayedProperty_C(ABPeoplePickerView *_self, id property);

// method '-[ABPeoplePickerView setGroupDoubleAction:]'
void _IM_ABPeoplePickerView_setGroupDoubleAction_C(ABPeoplePickerView *_self, SEL action);

// method '-[ABPeoplePickerView setNameDoubleAction:]'
void _IM_ABPeoplePickerView_setNameDoubleAction_C(ABPeoplePickerView *_self, SEL action);

// method '-[ABPeoplePickerView setTarget:]'
void _IM_ABPeoplePickerView_setTarget_C(ABPeoplePickerView *_self, id target);

// method '-[ABPeoplePickerView setValueSelectionBehavior:]'
void _IM_ABPeoplePickerView_setValueSelectionBehavior_C(ABPeoplePickerView *_self, int behavior);

// method '-[ABPeoplePickerView target]'
id _IM_ABPeoplePickerView_target(ABPeoplePickerView *_self);

// method '-[ABPeoplePickerView valueSelectionBehavior]'
int _IM_ABPeoplePickerView_valueSelectionBehavior(ABPeoplePickerView *_self);

// method '+[ABPerson addPropertiesAndTypes:]'
int _CM_ABPerson_addPropertiesAndTypes_C(Class _class, id properties);

// method '-[ABPerson beginLoadingImageDataForClient:]'
int _IM_ABPerson_beginLoadingImageDataForClient_C(ABPerson *_self, id client);

// method '+[ABPerson cancelLoadingImageDataForTag:]'
void _CM_ABPerson_cancelLoadingImageDataForTag_C(Class _class, int tag);

// method '-[ABPerson imageData]'
id _IM_ABPerson_imageData(ABPerson *_self);

// method '-[ABPerson initWithVCardRepresentation:]'
ABPerson *_IM_ABPerson_initWithVCardRepresentation_C(ABPerson *_self, id vCardData);

// method '-[ABPerson parentGroups]'
id _IM_ABPerson_parentGroups(ABPerson *_self);

// method '+[ABPerson properties]'
id _CM_ABPerson_properties(Class _class);

// method '+[ABPerson removeProperties:]'
int _CM_ABPerson_removeProperties_C(Class _class, id properties);

// method '+[ABPerson searchElementForProperty:label:key:value:comparison:]'
ABSearchElement* _CM_ABPerson_searchElementForProperty_Clabel_Ckey_Cvalue_Ccomparison_C(Class _class, id property, id label, id key, id value, int comparison);

// method '-[ABPerson setImageData:]'
BOOL _IM_ABPerson_setImageData_C(ABPerson *_self, id data);

// method '+[ABPerson typeOfProperty:]'
int _CM_ABPerson_typeOfProperty_C(Class _class, id property);

// method '-[ABPerson vCardRepresentation]'
id _IM_ABPerson_vCardRepresentation(ABPerson *_self);

// method '-[ABRecord isReadOnly]'
BOOL _IM_ABRecord_isReadOnly(ABRecord *_self);

// method '-[ABRecord removeValueForProperty:]'
BOOL _IM_ABRecord_removeValueForProperty_C(ABRecord *_self, id property);

// method '-[ABRecord setValue:forProperty:]'
BOOL _IM_ABRecord_setValue_CforProperty_C(ABRecord *_self, id value, id property);

// method '-[ABRecord uniqueId]'
id _IM_ABRecord_uniqueId(ABRecord *_self);

// method '-[ABRecord valueForProperty:]'
id _IM_ABRecord_valueForProperty_C(ABRecord *_self, id property);

// method '-[ABSearchElement matchesRecord:]'
BOOL _IM_ABSearchElement_matchesRecord_C(ABSearchElement *_self, ABRecord* record);

// method '+[ABSearchElement searchElementForConjunction:children:]'
ABSearchElement* _CM_ABSearchElement_searchElementForConjunction_Cchildren_C(Class _class, int conjuction, id children);

// method '-[NSObject actionProperty]'
id _IM_NSObject_actionProperty(NSObject *_self);

// method '-[NSObject consumeImageData:forTag:]'
void _IM_NSObject_consumeImageData_CforTag_C(NSObject *_self, id data, int tag);

// method '-[NSObject performActionForPerson:identifier:]'
void _IM_NSObject_performActionForPerson_Cidentifier_C(NSObject *_self, ABPerson* person, id identifier);

// method '-[NSObject shouldEnableActionForPerson:identifier:]'
BOOL _IM_NSObject_shouldEnableActionForPerson_Cidentifier_C(NSObject *_self, ABPerson* person, id identifier);

// method '-[NSObject titleForPerson:identifier:]'
id _IM_NSObject_titleForPerson_Cidentifier_C(NSObject *_self, ABPerson* person, id identifier);


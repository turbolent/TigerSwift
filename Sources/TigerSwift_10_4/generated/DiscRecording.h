// Generated by W2C2BridgeGenerator
#include <stdarg.h>

// class 'DRDevice'
typedef struct objc_object DRDevice;

// getter for constant 'DRDeviceAppearedNotification'
id _get_DRDeviceAppearedNotification(void);

// getter for constant 'DRDeviceBurnSpeedCD1x'
float _get_DRDeviceBurnSpeedCD1x(void);

// getter for constant 'DRDeviceBurnSpeedDVD1x'
float _get_DRDeviceBurnSpeedDVD1x(void);

// getter for constant 'DRDeviceBurnSpeedMax'
float _get_DRDeviceBurnSpeedMax(void);

// getter for constant 'DRDeviceBurnSpeedsKey'
id _get_DRDeviceBurnSpeedsKey(void);

// getter for constant 'DRDeviceCanTestWriteCDKey'
id _get_DRDeviceCanTestWriteCDKey(void);

// getter for constant 'DRDeviceCanTestWriteDVDKey'
id _get_DRDeviceCanTestWriteDVDKey(void);

// getter for constant 'DRDeviceCanUnderrunProtectCDKey'
id _get_DRDeviceCanUnderrunProtectCDKey(void);

// getter for constant 'DRDeviceCanUnderrunProtectDVDKey'
id _get_DRDeviceCanUnderrunProtectDVDKey(void);

// getter for constant 'DRDeviceCanWriteCDKey'
id _get_DRDeviceCanWriteCDKey(void);

// getter for constant 'DRDeviceCanWriteCDRKey'
id _get_DRDeviceCanWriteCDRKey(void);

// getter for constant 'DRDeviceCanWriteCDRWKey'
id _get_DRDeviceCanWriteCDRWKey(void);

// getter for constant 'DRDeviceCanWriteCDRawKey'
id _get_DRDeviceCanWriteCDRawKey(void);

// getter for constant 'DRDeviceCanWriteCDSAOKey'
id _get_DRDeviceCanWriteCDSAOKey(void);

// getter for constant 'DRDeviceCanWriteCDTAOKey'
id _get_DRDeviceCanWriteCDTAOKey(void);

// getter for constant 'DRDeviceCanWriteCDTextKey'
id _get_DRDeviceCanWriteCDTextKey(void);

// getter for constant 'DRDeviceCanWriteDVDDAOKey'
id _get_DRDeviceCanWriteDVDDAOKey(void);

// getter for constant 'DRDeviceCanWriteDVDKey'
id _get_DRDeviceCanWriteDVDKey(void);

// getter for constant 'DRDeviceCanWriteDVDPlusRDoubleLayerKey'
id _get_DRDeviceCanWriteDVDPlusRDoubleLayerKey(void);

// getter for constant 'DRDeviceCanWriteDVDPlusRKey'
id _get_DRDeviceCanWriteDVDPlusRKey(void);

// getter for constant 'DRDeviceCanWriteDVDPlusRWKey'
id _get_DRDeviceCanWriteDVDPlusRWKey(void);

// getter for constant 'DRDeviceCanWriteDVDRAMKey'
id _get_DRDeviceCanWriteDVDRAMKey(void);

// getter for constant 'DRDeviceCanWriteDVDRKey'
id _get_DRDeviceCanWriteDVDRKey(void);

// getter for constant 'DRDeviceCanWriteDVDRWKey'
id _get_DRDeviceCanWriteDVDRWKey(void);

// getter for constant 'DRDeviceCanWriteISRCKey'
id _get_DRDeviceCanWriteISRCKey(void);

// getter for constant 'DRDeviceCanWriteIndexPointsKey'
id _get_DRDeviceCanWriteIndexPointsKey(void);

// getter for constant 'DRDeviceCanWriteKey'
id _get_DRDeviceCanWriteKey(void);

// getter for constant 'DRDeviceCurrentWriteSpeedKey'
id _get_DRDeviceCurrentWriteSpeedKey(void);

// getter for constant 'DRDeviceDisappearedNotification'
id _get_DRDeviceDisappearedNotification(void);

// getter for constant 'DRDeviceFirmwareRevisionKey'
id _get_DRDeviceFirmwareRevisionKey(void);

// getter for constant 'DRDeviceIORegistryEntryPathKey'
id _get_DRDeviceIORegistryEntryPathKey(void);

// getter for constant 'DRDeviceIsBusyKey'
id _get_DRDeviceIsBusyKey(void);

// getter for constant 'DRDeviceIsTrayOpenKey'
id _get_DRDeviceIsTrayOpenKey(void);

// getter for constant 'DRDeviceLoadingMechanismCanEjectKey'
id _get_DRDeviceLoadingMechanismCanEjectKey(void);

// getter for constant 'DRDeviceLoadingMechanismCanInjectKey'
id _get_DRDeviceLoadingMechanismCanInjectKey(void);

// getter for constant 'DRDeviceLoadingMechanismCanOpenKey'
id _get_DRDeviceLoadingMechanismCanOpenKey(void);

// getter for constant 'DRDeviceMaximumWriteSpeedKey'
id _get_DRDeviceMaximumWriteSpeedKey(void);

// getter for constant 'DRDeviceMediaBSDNameKey'
id _get_DRDeviceMediaBSDNameKey(void);

// getter for constant 'DRDeviceMediaBlocksFreeKey'
id _get_DRDeviceMediaBlocksFreeKey(void);

// getter for constant 'DRDeviceMediaBlocksOverwritableKey'
id _get_DRDeviceMediaBlocksOverwritableKey(void);

// getter for constant 'DRDeviceMediaBlocksUsedKey'
id _get_DRDeviceMediaBlocksUsedKey(void);

// getter for constant 'DRDeviceMediaClassCD'
id _get_DRDeviceMediaClassCD(void);

// getter for constant 'DRDeviceMediaClassDVD'
id _get_DRDeviceMediaClassDVD(void);

// getter for constant 'DRDeviceMediaClassKey'
id _get_DRDeviceMediaClassKey(void);

// getter for constant 'DRDeviceMediaClassUnknown'
id _get_DRDeviceMediaClassUnknown(void);

// getter for constant 'DRDeviceMediaDoubleLayerL0DataZoneBlocksKey'
id _get_DRDeviceMediaDoubleLayerL0DataZoneBlocksKey(void);

// getter for constant 'DRDeviceMediaFreeSpaceKey'
id _get_DRDeviceMediaFreeSpaceKey(void);

// getter for constant 'DRDeviceMediaInfoKey'
id _get_DRDeviceMediaInfoKey(void);

// getter for constant 'DRDeviceMediaIsAppendableKey'
id _get_DRDeviceMediaIsAppendableKey(void);

// getter for constant 'DRDeviceMediaIsBlankKey'
id _get_DRDeviceMediaIsBlankKey(void);

// getter for constant 'DRDeviceMediaIsErasableKey'
id _get_DRDeviceMediaIsErasableKey(void);

// getter for constant 'DRDeviceMediaIsOverwritableKey'
id _get_DRDeviceMediaIsOverwritableKey(void);

// getter for constant 'DRDeviceMediaIsReservedKey'
id _get_DRDeviceMediaIsReservedKey(void);

// getter for constant 'DRDeviceMediaOverwritableSpaceKey'
id _get_DRDeviceMediaOverwritableSpaceKey(void);

// getter for constant 'DRDeviceMediaSessionCountKey'
id _get_DRDeviceMediaSessionCountKey(void);

// getter for constant 'DRDeviceMediaStateInTransition'
id _get_DRDeviceMediaStateInTransition(void);

// getter for constant 'DRDeviceMediaStateKey'
id _get_DRDeviceMediaStateKey(void);

// getter for constant 'DRDeviceMediaStateMediaPresent'
id _get_DRDeviceMediaStateMediaPresent(void);

// getter for constant 'DRDeviceMediaStateNone'
id _get_DRDeviceMediaStateNone(void);

// getter for constant 'DRDeviceMediaTrackCountKey'
id _get_DRDeviceMediaTrackCountKey(void);

// getter for constant 'DRDeviceMediaTypeCDR'
id _get_DRDeviceMediaTypeCDR(void);

// getter for constant 'DRDeviceMediaTypeCDROM'
id _get_DRDeviceMediaTypeCDROM(void);

// getter for constant 'DRDeviceMediaTypeCDRW'
id _get_DRDeviceMediaTypeCDRW(void);

// getter for constant 'DRDeviceMediaTypeDVDPlusR'
id _get_DRDeviceMediaTypeDVDPlusR(void);

// getter for constant 'DRDeviceMediaTypeDVDPlusRDoubleLayer'
id _get_DRDeviceMediaTypeDVDPlusRDoubleLayer(void);

// getter for constant 'DRDeviceMediaTypeDVDPlusRW'
id _get_DRDeviceMediaTypeDVDPlusRW(void);

// getter for constant 'DRDeviceMediaTypeDVDR'
id _get_DRDeviceMediaTypeDVDR(void);

// getter for constant 'DRDeviceMediaTypeDVDRAM'
id _get_DRDeviceMediaTypeDVDRAM(void);

// getter for constant 'DRDeviceMediaTypeDVDROM'
id _get_DRDeviceMediaTypeDVDROM(void);

// getter for constant 'DRDeviceMediaTypeDVDRW'
id _get_DRDeviceMediaTypeDVDRW(void);

// getter for constant 'DRDeviceMediaTypeKey'
id _get_DRDeviceMediaTypeKey(void);

// getter for constant 'DRDeviceMediaTypeUnknown'
id _get_DRDeviceMediaTypeUnknown(void);

// getter for constant 'DRDeviceMediaUsedSpaceKey'
id _get_DRDeviceMediaUsedSpaceKey(void);

// getter for constant 'DRDevicePhysicalInterconnectATAPI'
id _get_DRDevicePhysicalInterconnectATAPI(void);

// getter for constant 'DRDevicePhysicalInterconnectFibreChannel'
id _get_DRDevicePhysicalInterconnectFibreChannel(void);

// getter for constant 'DRDevicePhysicalInterconnectFireWire'
id _get_DRDevicePhysicalInterconnectFireWire(void);

// getter for constant 'DRDevicePhysicalInterconnectKey'
id _get_DRDevicePhysicalInterconnectKey(void);

// getter for constant 'DRDevicePhysicalInterconnectLocationExternal'
id _get_DRDevicePhysicalInterconnectLocationExternal(void);

// getter for constant 'DRDevicePhysicalInterconnectLocationInternal'
id _get_DRDevicePhysicalInterconnectLocationInternal(void);

// getter for constant 'DRDevicePhysicalInterconnectLocationKey'
id _get_DRDevicePhysicalInterconnectLocationKey(void);

// getter for constant 'DRDevicePhysicalInterconnectLocationUnknown'
id _get_DRDevicePhysicalInterconnectLocationUnknown(void);

// getter for constant 'DRDevicePhysicalInterconnectSCSI'
id _get_DRDevicePhysicalInterconnectSCSI(void);

// getter for constant 'DRDevicePhysicalInterconnectUSB'
id _get_DRDevicePhysicalInterconnectUSB(void);

// getter for constant 'DRDeviceProductNameKey'
id _get_DRDeviceProductNameKey(void);

// getter for constant 'DRDeviceStatusChangedNotification'
id _get_DRDeviceStatusChangedNotification(void);

// getter for constant 'DRDeviceSupportLevelAppleShipping'
id _get_DRDeviceSupportLevelAppleShipping(void);

// getter for constant 'DRDeviceSupportLevelAppleSupported'
id _get_DRDeviceSupportLevelAppleSupported(void);

// getter for constant 'DRDeviceSupportLevelKey'
id _get_DRDeviceSupportLevelKey(void);

// getter for constant 'DRDeviceSupportLevelNone'
id _get_DRDeviceSupportLevelNone(void);

// getter for constant 'DRDeviceSupportLevelUnsupported'
id _get_DRDeviceSupportLevelUnsupported(void);

// getter for constant 'DRDeviceSupportLevelVendorSupported'
id _get_DRDeviceSupportLevelVendorSupported(void);

// getter for constant 'DRDeviceTrackInfoKey'
id _get_DRDeviceTrackInfoKey(void);

// getter for constant 'DRDeviceTrackRefsKey'
id _get_DRDeviceTrackRefsKey(void);

// getter for constant 'DRDeviceVendorNameKey'
id _get_DRDeviceVendorNameKey(void);

// getter for constant 'DRDeviceWriteBufferSizeKey'
id _get_DRDeviceWriteBufferSizeKey(void);

// getter for constant 'DRDeviceWriteCapabilitiesKey'
id _get_DRDeviceWriteCapabilitiesKey(void);

// method '-[DRDevice acquireExclusiveAccess]'
BOOL _IM_DRDevice_acquireExclusiveAccess(DRDevice *_self);

// method '-[DRDevice acquireMediaReservation]'
void _IM_DRDevice_acquireMediaReservation(DRDevice *_self);

// method '-[DRDevice bsdName]'
id _IM_DRDevice_bsdName(DRDevice *_self);

// method '-[DRDevice closeTray]'
BOOL _IM_DRDevice_closeTray(DRDevice *_self);

// method '+[DRDevice deviceForBSDName:]'
DRDevice* _CM_DRDevice_deviceForBSDName_C(Class _class, id bsdName);

// method '+[DRDevice deviceForIORegistryEntryPath:]'
DRDevice* _CM_DRDevice_deviceForIORegistryEntryPath_C(Class _class, id path);

// method '+[DRDevice devices]'
id _CM_DRDevice_devices(Class _class);

// method '-[DRDevice displayName]'
id _IM_DRDevice_displayName(DRDevice *_self);

// method '-[DRDevice ejectMedia]'
BOOL _IM_DRDevice_ejectMedia(DRDevice *_self);

// method '-[DRDevice info]'
id _IM_DRDevice_info(DRDevice *_self);

// method '-[DRDevice ioRegistryEntryPath]'
id _IM_DRDevice_ioRegistryEntryPath(DRDevice *_self);

// method '-[DRDevice isEqualToDevice:]'
BOOL _IM_DRDevice_isEqualToDevice_C(DRDevice *_self, DRDevice* otherDevice);

// method '-[DRDevice isValid]'
BOOL _IM_DRDevice_isValid(DRDevice *_self);

// method '-[DRDevice mediaIsAppendable]'
BOOL _IM_DRDevice_mediaIsAppendable(DRDevice *_self);

// method '-[DRDevice mediaIsBlank]'
BOOL _IM_DRDevice_mediaIsBlank(DRDevice *_self);

// method '-[DRDevice mediaIsBusy]'
BOOL _IM_DRDevice_mediaIsBusy(DRDevice *_self);

// method '-[DRDevice mediaIsErasable]'
BOOL _IM_DRDevice_mediaIsErasable(DRDevice *_self);

// method '-[DRDevice mediaIsOverwritable]'
BOOL _IM_DRDevice_mediaIsOverwritable(DRDevice *_self);

// method '-[DRDevice mediaIsPresent]'
BOOL _IM_DRDevice_mediaIsPresent(DRDevice *_self);

// method '-[DRDevice mediaIsReserved]'
BOOL _IM_DRDevice_mediaIsReserved(DRDevice *_self);

// method '-[DRDevice mediaIsTransitioning]'
BOOL _IM_DRDevice_mediaIsTransitioning(DRDevice *_self);

// method '-[DRDevice mediaSpaceFree]'
id _IM_DRDevice_mediaSpaceFree(DRDevice *_self);

// method '-[DRDevice mediaSpaceOverwritable]'
id _IM_DRDevice_mediaSpaceOverwritable(DRDevice *_self);

// method '-[DRDevice mediaSpaceUsed]'
id _IM_DRDevice_mediaSpaceUsed(DRDevice *_self);

// method '-[DRDevice mediaType]'
id _IM_DRDevice_mediaType(DRDevice *_self);

// method '-[DRDevice openTray]'
BOOL _IM_DRDevice_openTray(DRDevice *_self);

// method '-[DRDevice releaseExclusiveAccess]'
void _IM_DRDevice_releaseExclusiveAccess(DRDevice *_self);

// method '-[DRDevice releaseMediaReservation]'
void _IM_DRDevice_releaseMediaReservation(DRDevice *_self);

// method '-[DRDevice status]'
id _IM_DRDevice_status(DRDevice *_self);

// method '-[DRDevice trayIsOpen]'
BOOL _IM_DRDevice_trayIsOpen(DRDevice *_self);

// method '-[DRDevice writesCD]'
BOOL _IM_DRDevice_writesCD(DRDevice *_self);

// method '-[DRDevice writesDVD]'
BOOL _IM_DRDevice_writesDVD(DRDevice *_self);


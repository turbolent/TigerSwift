// Generated by W2C2BridgeGenerator
#include <stdarg.h>

// CoreFoundation type 'IOBluetoothDeviceSelectorControllerRef'
typedef struct OpaqueIOBluetoothObjectRef *IOBluetoothDeviceSelectorControllerRef;

// CoreFoundation type 'IOBluetoothPairingControllerRef'
typedef struct OpaqueIOBluetoothObjectRef *IOBluetoothPairingControllerRef;

// CoreFoundation type 'IOBluetoothServiceBrowserControllerRef'
typedef struct OpaqueIOBluetoothObjectRef *IOBluetoothServiceBrowserControllerRef;

// class 'IOBluetoothDeviceSelectorController'
typedef struct objc_object IOBluetoothDeviceSelectorController;

// class 'IOBluetoothObjectPushUIController'
typedef struct objc_object IOBluetoothObjectPushUIController;

// class 'IOBluetoothPairingController'
typedef struct objc_object IOBluetoothPairingController;

// class 'IOBluetoothServiceBrowserController'
typedef struct objc_object IOBluetoothServiceBrowserController;

enum { kIOBluetoothServiceBrowserControllerOptionsAutoStartInquiry = 1 };

enum { kIOBluetoothServiceBrowserControllerOptionsDisconnectWhenDone = 2 };

enum { kIOBluetoothServiceBrowserControllerOptionsNone = 0 };

enum { kIOBluetoothUISuccess = -1000 };

enum { kIOBluetoothUIUserCanceledErr = -1001 };

// function 'IOBluetoothDeviceSelectorRunPanelWithAttributes'
struct __CFArray *IOBluetoothDeviceSelectorRunPanelWithAttributes(struct OpaqueIOBluetoothObjectRef *deviceSelector, struct IOBluetoothDeviceSearchAttributes *attributes);

// function 'IOBluetoothGetDeviceSelectorController'
struct OpaqueIOBluetoothObjectRef *IOBluetoothGetDeviceSelectorController(void);

// function 'IOBluetoothGetPairingController'
struct OpaqueIOBluetoothObjectRef *IOBluetoothGetPairingController(void);

// function 'IOBluetoothPairingControllerRunPanelWithAttributes'
void IOBluetoothPairingControllerRunPanelWithAttributes(struct OpaqueIOBluetoothObjectRef *pairingController, struct IOBluetoothDeviceSearchAttributes *attributes);

// function 'IOBluetoothServiceBrowserControllerBrowseDevices'
int IOBluetoothServiceBrowserControllerBrowseDevices(struct OpaqueIOBluetoothObjectRef **outRecord, unsigned int inOptions);

// function 'IOBluetoothServiceBrowserControllerCreate'
struct OpaqueIOBluetoothObjectRef *IOBluetoothServiceBrowserControllerCreate(unsigned int inOptions);

// function 'IOBluetoothServiceBrowserControllerDiscover'
int IOBluetoothServiceBrowserControllerDiscover(struct OpaqueIOBluetoothObjectRef *controller, struct OpaqueIOBluetoothObjectRef **outRecord);

// function 'IOBluetoothServiceBrowserControllerDiscoverWithDeviceAttributes'
int IOBluetoothServiceBrowserControllerDiscoverWithDeviceAttributes(struct OpaqueIOBluetoothObjectRef *controller, struct OpaqueIOBluetoothObjectRef **outRecord, struct IOBluetoothDeviceSearchAttributes *deviceAttributes, struct __CFArray *serviceArray);

// function 'IOBluetoothServiceBrowserControllerSetOptions'
void IOBluetoothServiceBrowserControllerSetOptions(struct OpaqueIOBluetoothObjectRef *controller, unsigned int inOptions);

// function 'IOBluetoothValidateHardware'
int IOBluetoothValidateHardware(struct __CFString *cancelButtonTitle);

// method '-[IOBluetoothDeviceSelectorController addAllowedUUID:]'
void _IM_IOBluetoothDeviceSelectorController_addAllowedUUID_C(IOBluetoothDeviceSelectorController *_self, id allowedUUID);

// method '-[IOBluetoothDeviceSelectorController addAllowedUUIDArray:]'
void _IM_IOBluetoothDeviceSelectorController_addAllowedUUIDArray_C(IOBluetoothDeviceSelectorController *_self, id allowedUUIDArray);

// method '-[IOBluetoothDeviceSelectorController beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:]'
int _IM_IOBluetoothDeviceSelectorController_beginSheetModalForWindow_CmodalDelegate_CdidEndSelector_CcontextInfo_C(IOBluetoothDeviceSelectorController *_self, id sheetWindow, id modalDelegate, SEL didEndSelector, void *contextInfo);

// method '-[IOBluetoothDeviceSelectorController clearAllowedUUIDs]'
void _IM_IOBluetoothDeviceSelectorController_clearAllowedUUIDs(IOBluetoothDeviceSelectorController *_self);

// method '+[IOBluetoothDeviceSelectorController deviceSelector]'
IOBluetoothDeviceSelectorController* _CM_IOBluetoothDeviceSelectorController_deviceSelector(Class _class);

// method '-[IOBluetoothDeviceSelectorController getDescriptionText]'
id _IM_IOBluetoothDeviceSelectorController_getDescriptionText(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getDeviceSelectorControllerRef]'
struct OpaqueIOBluetoothObjectRef *_IM_IOBluetoothDeviceSelectorController_getDeviceSelectorControllerRef(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getOptions]'
unsigned int _IM_IOBluetoothDeviceSelectorController_getOptions(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getPrompt]'
id _IM_IOBluetoothDeviceSelectorController_getPrompt(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getResults]'
id _IM_IOBluetoothDeviceSelectorController_getResults(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getSearchAttributes]'
const struct IOBluetoothDeviceSearchAttributes* _IM_IOBluetoothDeviceSelectorController_getSearchAttributes(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController getTitle]'
id _IM_IOBluetoothDeviceSelectorController_getTitle(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController runModal]'
int _IM_IOBluetoothDeviceSelectorController_runModal(IOBluetoothDeviceSelectorController *_self);

// method '-[IOBluetoothDeviceSelectorController runPanelWithAttributes:]'
id _IM_IOBluetoothDeviceSelectorController_runPanelWithAttributes_C(IOBluetoothDeviceSelectorController *_self, struct IOBluetoothDeviceSearchAttributes *attributes);

// method '-[IOBluetoothDeviceSelectorController setDescriptionText:]'
void _IM_IOBluetoothDeviceSelectorController_setDescriptionText_C(IOBluetoothDeviceSelectorController *_self, id descriptionText);

// method '-[IOBluetoothDeviceSelectorController setOptions:]'
void _IM_IOBluetoothDeviceSelectorController_setOptions_C(IOBluetoothDeviceSelectorController *_self, unsigned int options);

// method '-[IOBluetoothDeviceSelectorController setPrompt:]'
void _IM_IOBluetoothDeviceSelectorController_setPrompt_C(IOBluetoothDeviceSelectorController *_self, id prompt);

// method '-[IOBluetoothDeviceSelectorController setSearchAttributes:]'
void _IM_IOBluetoothDeviceSelectorController_setSearchAttributes_C(IOBluetoothDeviceSelectorController *_self, const struct IOBluetoothDeviceSearchAttributes* searchAttributes);

// method '-[IOBluetoothDeviceSelectorController setTitle:]'
void _IM_IOBluetoothDeviceSelectorController_setTitle_C(IOBluetoothDeviceSelectorController *_self, id windowTitle);

// method '+[IOBluetoothDeviceSelectorController withDeviceSelectorControllerRef:]'
IOBluetoothDeviceSelectorController* _CM_IOBluetoothDeviceSelectorController_withDeviceSelectorControllerRef_C(Class _class, struct OpaqueIOBluetoothObjectRef *deviceSelectorControllerRef);

// method '-[IOBluetoothObjectPushUIController beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:]'
int _IM_IOBluetoothObjectPushUIController_beginSheetModalForWindow_CmodalDelegate_CdidEndSelector_CcontextInfo_C(IOBluetoothObjectPushUIController *_self, id sheetWindow, id modalDelegate, SEL didEndSelector, void *contextInfo);

// method '-[IOBluetoothObjectPushUIController getDevice]'
id _IM_IOBluetoothObjectPushUIController_getDevice(IOBluetoothObjectPushUIController *_self);

// method '-[IOBluetoothObjectPushUIController getTitle]'
id _IM_IOBluetoothObjectPushUIController_getTitle(IOBluetoothObjectPushUIController *_self);

// method '-[IOBluetoothObjectPushUIController initObjectPushWithBluetoothDevice:withFiles:delegate:]'
IOBluetoothObjectPushUIController *_IM_IOBluetoothObjectPushUIController_initObjectPushWithBluetoothDevice_CwithFiles_Cdelegate_C(IOBluetoothObjectPushUIController *_self, id inDevice, id inFiles, id inDelegate);

// method '-[IOBluetoothObjectPushUIController runModal]'
void _IM_IOBluetoothObjectPushUIController_runModal(IOBluetoothObjectPushUIController *_self);

// method '-[IOBluetoothObjectPushUIController runPanel]'
void _IM_IOBluetoothObjectPushUIController_runPanel(IOBluetoothObjectPushUIController *_self);

// method '-[IOBluetoothObjectPushUIController setIconImage:]'
void _IM_IOBluetoothObjectPushUIController_setIconImage_C(IOBluetoothObjectPushUIController *_self, id image);

// method '-[IOBluetoothObjectPushUIController setTitle:]'
void _IM_IOBluetoothObjectPushUIController_setTitle_C(IOBluetoothObjectPushUIController *_self, id windowTitle);

// method '-[IOBluetoothObjectPushUIController stop]'
void _IM_IOBluetoothObjectPushUIController_stop(IOBluetoothObjectPushUIController *_self);

// method '-[IOBluetoothPairingController addAllowedUUID:]'
void _IM_IOBluetoothPairingController_addAllowedUUID_C(IOBluetoothPairingController *_self, id allowedUUID);

// method '-[IOBluetoothPairingController addAllowedUUIDArray:]'
void _IM_IOBluetoothPairingController_addAllowedUUIDArray_C(IOBluetoothPairingController *_self, id allowedUUIDArray);

// method '-[IOBluetoothPairingController clearAllowedUUIDs]'
void _IM_IOBluetoothPairingController_clearAllowedUUIDs(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getDescriptionText]'
id _IM_IOBluetoothPairingController_getDescriptionText(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getOptions]'
unsigned int _IM_IOBluetoothPairingController_getOptions(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getPairingControllerRef]'
struct OpaqueIOBluetoothObjectRef *_IM_IOBluetoothPairingController_getPairingControllerRef(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getPrompt]'
id _IM_IOBluetoothPairingController_getPrompt(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getResults]'
id _IM_IOBluetoothPairingController_getResults(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getSearchAttributes]'
const struct IOBluetoothDeviceSearchAttributes* _IM_IOBluetoothPairingController_getSearchAttributes(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController getTitle]'
id _IM_IOBluetoothPairingController_getTitle(IOBluetoothPairingController *_self);

// method '+[IOBluetoothPairingController pairingController]'
IOBluetoothPairingController* _CM_IOBluetoothPairingController_pairingController(Class _class);

// method '-[IOBluetoothPairingController runModal]'
int _IM_IOBluetoothPairingController_runModal(IOBluetoothPairingController *_self);

// method '-[IOBluetoothPairingController runPanelWithAttributes:]'
void _IM_IOBluetoothPairingController_runPanelWithAttributes_C(IOBluetoothPairingController *_self, struct IOBluetoothDeviceSearchAttributes *attributes);

// method '-[IOBluetoothPairingController setDescriptionText:]'
void _IM_IOBluetoothPairingController_setDescriptionText_C(IOBluetoothPairingController *_self, id descriptionText);

// method '-[IOBluetoothPairingController setOptions:]'
void _IM_IOBluetoothPairingController_setOptions_C(IOBluetoothPairingController *_self, unsigned int options);

// method '-[IOBluetoothPairingController setPrompt:]'
void _IM_IOBluetoothPairingController_setPrompt_C(IOBluetoothPairingController *_self, id prompt);

// method '-[IOBluetoothPairingController setSearchAttributes:]'
void _IM_IOBluetoothPairingController_setSearchAttributes_C(IOBluetoothPairingController *_self, const struct IOBluetoothDeviceSearchAttributes* searchAttributes);

// method '-[IOBluetoothPairingController setTitle:]'
void _IM_IOBluetoothPairingController_setTitle_C(IOBluetoothPairingController *_self, id windowTitle);

// method '+[IOBluetoothPairingController withPairingControllerRef:]'
IOBluetoothPairingController* _CM_IOBluetoothPairingController_withPairingControllerRef_C(Class _class, struct OpaqueIOBluetoothObjectRef *pairingControllerRef);

// method '-[IOBluetoothServiceBrowserController addAllowedUUID:]'
void _IM_IOBluetoothServiceBrowserController_addAllowedUUID_C(IOBluetoothServiceBrowserController *_self, id allowedUUID);

// method '-[IOBluetoothServiceBrowserController addAllowedUUIDArray:]'
void _IM_IOBluetoothServiceBrowserController_addAllowedUUIDArray_C(IOBluetoothServiceBrowserController *_self, id allowedUUIDArray);

// method '-[IOBluetoothServiceBrowserController beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:]'
int _IM_IOBluetoothServiceBrowserController_beginSheetModalForWindow_CmodalDelegate_CdidEndSelector_CcontextInfo_C(IOBluetoothServiceBrowserController *_self, id sheetWindow, id modalDelegate, SEL didEndSelector, void *contextInfo);

// method '+[IOBluetoothServiceBrowserController browseDevices:options:]'
int _CM_IOBluetoothServiceBrowserController_browseDevices_Coptions_C(Class _class, id *outRecord, unsigned int inOptions);

// method '+[IOBluetoothServiceBrowserController browseDevicesAsSheetForWindow:options:window:]'
int _CM_IOBluetoothServiceBrowserController_browseDevicesAsSheetForWindow_Coptions_Cwindow_C(Class _class, id *outRecord, unsigned int inOptions, id inWindow);

// method '-[IOBluetoothServiceBrowserController clearAllowedUUIDs]'
void _IM_IOBluetoothServiceBrowserController_clearAllowedUUIDs(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController discover:]'
int _IM_IOBluetoothServiceBrowserController_discover_C(IOBluetoothServiceBrowserController *_self, id *outRecord);

// method '-[IOBluetoothServiceBrowserController discoverAsSheetForWindow:withRecord:]'
int _IM_IOBluetoothServiceBrowserController_discoverAsSheetForWindow_CwithRecord_C(IOBluetoothServiceBrowserController *_self, id sheetWindow, id *outRecord);

// method '-[IOBluetoothServiceBrowserController discoverWithDeviceAttributes:serviceList:serviceRecord:]'
int _IM_IOBluetoothServiceBrowserController_discoverWithDeviceAttributes_CserviceList_CserviceRecord_C(IOBluetoothServiceBrowserController *_self, struct IOBluetoothDeviceSearchAttributes *deviceAttributes, id serviceArray, id *outRecord);

// method '-[IOBluetoothServiceBrowserController getDescriptionText]'
id _IM_IOBluetoothServiceBrowserController_getDescriptionText(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getOptions]'
unsigned int _IM_IOBluetoothServiceBrowserController_getOptions(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getPrompt]'
id _IM_IOBluetoothServiceBrowserController_getPrompt(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getResults]'
id _IM_IOBluetoothServiceBrowserController_getResults(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getSearchAttributes]'
const struct IOBluetoothDeviceSearchAttributes* _IM_IOBluetoothServiceBrowserController_getSearchAttributes(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getServiceBrowserControllerRef]'
struct OpaqueIOBluetoothObjectRef *_IM_IOBluetoothServiceBrowserController_getServiceBrowserControllerRef(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController getTitle]'
id _IM_IOBluetoothServiceBrowserController_getTitle(IOBluetoothServiceBrowserController *_self);

// method '-[IOBluetoothServiceBrowserController runModal]'
int _IM_IOBluetoothServiceBrowserController_runModal(IOBluetoothServiceBrowserController *_self);

// method '+[IOBluetoothServiceBrowserController serviceBrowserController:]'
IOBluetoothServiceBrowserController* _CM_IOBluetoothServiceBrowserController_serviceBrowserController_C(Class _class, unsigned int inOptions);

// method '-[IOBluetoothServiceBrowserController setDescriptionText:]'
void _IM_IOBluetoothServiceBrowserController_setDescriptionText_C(IOBluetoothServiceBrowserController *_self, id descriptionText);

// method '-[IOBluetoothServiceBrowserController setOptions:]'
void _IM_IOBluetoothServiceBrowserController_setOptions_C(IOBluetoothServiceBrowserController *_self, unsigned int inOptions);

// method '-[IOBluetoothServiceBrowserController setPrompt:]'
void _IM_IOBluetoothServiceBrowserController_setPrompt_C(IOBluetoothServiceBrowserController *_self, id prompt);

// method '-[IOBluetoothServiceBrowserController setSearchAttributes:]'
void _IM_IOBluetoothServiceBrowserController_setSearchAttributes_C(IOBluetoothServiceBrowserController *_self, const struct IOBluetoothDeviceSearchAttributes* searchAttributes);

// method '-[IOBluetoothServiceBrowserController setTitle:]'
void _IM_IOBluetoothServiceBrowserController_setTitle_C(IOBluetoothServiceBrowserController *_self, id windowTitle);

// method '+[IOBluetoothServiceBrowserController withServiceBrowserControllerRef:]'
IOBluetoothServiceBrowserController* _CM_IOBluetoothServiceBrowserController_withServiceBrowserControllerRef_C(Class _class, struct OpaqueIOBluetoothObjectRef *serviceBrowserControllerRef);


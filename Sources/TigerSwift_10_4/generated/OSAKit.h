// Generated by W2C2BridgeGenerator
#include <stdarg.h>

// class 'OSALanguage'
typedef struct objc_object OSALanguage;

// class 'OSAScript'
typedef struct objc_object OSAScript;

// class 'OSAScriptController'
typedef struct objc_object OSAScriptController;

// class 'OSAScriptView'
typedef struct objc_object OSAScriptView;

// getter for constant 'OSAScriptErrorAppName'
id _get_OSAScriptErrorAppName(void);

// getter for constant 'OSAScriptErrorBriefMessage'
id _get_OSAScriptErrorBriefMessage(void);

// getter for constant 'OSAScriptErrorMessage'
id _get_OSAScriptErrorMessage(void);

// getter for constant 'OSAScriptErrorNumber'
id _get_OSAScriptErrorNumber(void);

// getter for constant 'OSAScriptErrorRange'
id _get_OSAScriptErrorRange(void);

// getter for constant 'OSAStorageApplicationBundleType'
id _get_OSAStorageApplicationBundleType(void);

// getter for constant 'OSAStorageApplicationType'
id _get_OSAStorageApplicationType(void);

// getter for constant 'OSAStorageScriptBundleType'
id _get_OSAStorageScriptBundleType(void);

// getter for constant 'OSAStorageScriptType'
id _get_OSAStorageScriptType(void);

// getter for constant 'OSAStorageTextType'
id _get_OSAStorageTextType(void);

enum { OSACompileIntoContext = 2 };

enum { OSANull = 0 };

enum { OSAPreventGetSource = 1 };

enum { OSAScriptRecording = 2 };

enum { OSAScriptRunning = 1 };

enum { OSAScriptStopped = 0 };

enum { OSAShowStartupScreen = 536870912 };

enum { OSAStayOpenApplet = 268435456 };

enum { OSASupportsAECoercion = 8 };

enum { OSASupportsAESending = 16 };

enum { OSASupportsCompiling = 2 };

enum { OSASupportsConvenience = 64 };

enum { OSASupportsDialects = 128 };

enum { OSASupportsEventHandling = 256 };

enum { OSASupportsGetSource = 4 };

enum { OSASupportsRecording = 32 };

// method '+[OSALanguage availableLanguages]'
id _CM_OSALanguage_availableLanguages(Class _class);

// method '+[OSALanguage defaultLanguage]'
OSALanguage* _CM_OSALanguage_defaultLanguage(Class _class);

// method '-[OSALanguage features]'
int _IM_OSALanguage_features(OSALanguage *_self);

// method '-[OSALanguage info]'
id _IM_OSALanguage_info(OSALanguage *_self);

// method '+[OSALanguage languageForName:]'
OSALanguage* _CM_OSALanguage_languageForName_C(Class _class, id name);

// method '-[OSALanguage manufacturer]'
unsigned long _IM_OSALanguage_manufacturer(OSALanguage *_self);

// method '-[OSALanguage name]'
id _IM_OSALanguage_name(OSALanguage *_self);

// method '+[OSALanguage setDefaultLanguage:]'
void _CM_OSALanguage_setDefaultLanguage_C(Class _class, OSALanguage* defaultLanguage);

// method '-[OSALanguage subType]'
unsigned long _IM_OSALanguage_subType(OSALanguage *_self);

// method '-[OSALanguage type]'
unsigned long _IM_OSALanguage_type(OSALanguage *_self);

// method '-[OSALanguage version]'
id _IM_OSALanguage_version(OSALanguage *_self);

// method '-[OSAScript compileAndReturnError:]'
BOOL _IM_OSAScript_compileAndReturnError_C(OSAScript *_self, id *errorInfo);

// method '-[OSAScript compiledDataForType:usingStorageOptions:error:]'
id _IM_OSAScript_compiledDataForType_CusingStorageOptions_Cerror_C(OSAScript *_self, id type, int storageOptions, id *errorInfo);

// method '-[OSAScript executeAndReturnDisplayValue:error:]'
id _IM_OSAScript_executeAndReturnDisplayValue_Cerror_C(OSAScript *_self, id *displayValue, id *errorInfo);

// method '-[OSAScript executeAndReturnError:]'
id _IM_OSAScript_executeAndReturnError_C(OSAScript *_self, id *errorInfo);

// method '-[OSAScript executeAppleEvent:error:]'
id _IM_OSAScript_executeAppleEvent_Cerror_C(OSAScript *_self, id event, id *errorInfo);

// method '-[OSAScript executeHandlerWithName:arguments:error:]'
id _IM_OSAScript_executeHandlerWithName_Carguments_Cerror_C(OSAScript *_self, id name, id arguments, id *errorInfo);

// method '-[OSAScript initWithCompiledData:error:]'
OSAScript *_IM_OSAScript_initWithCompiledData_Cerror_C(OSAScript *_self, id data, id *errorInfo);

// method '-[OSAScript initWithContentsOfURL:error:]'
OSAScript *_IM_OSAScript_initWithContentsOfURL_Cerror_C(OSAScript *_self, id url, id *errorInfo);

// method '-[OSAScript initWithContentsOfURL:language:error:]'
OSAScript *_IM_OSAScript_initWithContentsOfURL_Clanguage_Cerror_C(OSAScript *_self, id url, OSALanguage* language, id *errorInfo);

// method '-[OSAScript initWithSource:]'
OSAScript *_IM_OSAScript_initWithSource_C(OSAScript *_self, id source);

// method '-[OSAScript initWithSource:language:]'
OSAScript *_IM_OSAScript_initWithSource_Clanguage_C(OSAScript *_self, id source, OSALanguage* language);

// method '-[OSAScript isCompiled]'
BOOL _IM_OSAScript_isCompiled(OSAScript *_self);

// method '-[OSAScript language]'
OSALanguage* _IM_OSAScript_language(OSAScript *_self);

// method '-[OSAScript richTextFromDescriptor:]'
id _IM_OSAScript_richTextFromDescriptor_C(OSAScript *_self, id descriptor);

// method '-[OSAScript richTextSource]'
id _IM_OSAScript_richTextSource(OSAScript *_self);

// method '-[OSAScript setLanguage:]'
void _IM_OSAScript_setLanguage_C(OSAScript *_self, OSALanguage* language);

// method '-[OSAScript source]'
id _IM_OSAScript_source(OSAScript *_self);

// method '-[OSAScript url]'
id _IM_OSAScript_url(OSAScript *_self);

// method '-[OSAScript writeToURL:ofType:error:]'
BOOL _IM_OSAScript_writeToURL_CofType_Cerror_C(OSAScript *_self, id url, id type, id *errorInfo);

// method '-[OSAScript writeToURL:ofType:usingStorageOptions:error:]'
BOOL _IM_OSAScript_writeToURL_CofType_CusingStorageOptions_Cerror_C(OSAScript *_self, id url, id type, int storageOptions, id *errorInfo);

// method '-[OSAScriptController compileScript:]'
void _IM_OSAScriptController_compileScript_C(OSAScriptController *_self, id sender);

// method '-[OSAScriptController isCompiling]'
BOOL _IM_OSAScriptController_isCompiling(OSAScriptController *_self);

// method '-[OSAScriptController language]'
OSALanguage* _IM_OSAScriptController_language(OSAScriptController *_self);

// method '-[OSAScriptController recordScript:]'
void _IM_OSAScriptController_recordScript_C(OSAScriptController *_self, id sender);

// method '-[OSAScriptController resultView]'
id _IM_OSAScriptController_resultView(OSAScriptController *_self);

// method '-[OSAScriptController runScript:]'
void _IM_OSAScriptController_runScript_C(OSAScriptController *_self, id sender);

// method '-[OSAScriptController script]'
OSAScript* _IM_OSAScriptController_script(OSAScriptController *_self);

// method '-[OSAScriptController scriptState]'
int _IM_OSAScriptController_scriptState(OSAScriptController *_self);

// method '-[OSAScriptController scriptView]'
OSAScriptView* _IM_OSAScriptController_scriptView(OSAScriptController *_self);

// method '-[OSAScriptController setLanguage:]'
void _IM_OSAScriptController_setLanguage_C(OSAScriptController *_self, OSALanguage* newLanguage);

// method '-[OSAScriptController setResultView:]'
void _IM_OSAScriptController_setResultView_C(OSAScriptController *_self, id newResultView);

// method '-[OSAScriptController setScript:]'
void _IM_OSAScriptController_setScript_C(OSAScriptController *_self, OSAScript* newScript);

// method '-[OSAScriptController setScriptView:]'
void _IM_OSAScriptController_setScriptView_C(OSAScriptController *_self, OSAScriptView* newScriptView);

// method '-[OSAScriptController stopScript:]'
void _IM_OSAScriptController_stopScript_C(OSAScriptController *_self, id sender);

// method '-[OSAScriptView indentWidth]'
int _IM_OSAScriptView_indentWidth(OSAScriptView *_self);

// method '-[OSAScriptView indentsWrappedLines]'
BOOL _IM_OSAScriptView_indentsWrappedLines(OSAScriptView *_self);

// method '-[OSAScriptView setIndentWidth:]'
void _IM_OSAScriptView_setIndentWidth_C(OSAScriptView *_self, int indentWidth);

// method '-[OSAScriptView setIndentsWrappedLines:]'
void _IM_OSAScriptView_setIndentsWrappedLines_C(OSAScriptView *_self, BOOL indentsWrappedLines);

// method '-[OSAScriptView setSource:]'
void _IM_OSAScriptView_setSource_C(OSAScriptView *_self, id source);

// method '-[OSAScriptView setTabWidth:]'
void _IM_OSAScriptView_setTabWidth_C(OSAScriptView *_self, int tabWidth);

// method '-[OSAScriptView setUsesScriptAssistant:]'
void _IM_OSAScriptView_setUsesScriptAssistant_C(OSAScriptView *_self, BOOL usesScriptAssistant);

// method '-[OSAScriptView setUsesTabs:]'
void _IM_OSAScriptView_setUsesTabs_C(OSAScriptView *_self, BOOL usesTabs);

// method '-[OSAScriptView setWrapsLines:]'
void _IM_OSAScriptView_setWrapsLines_C(OSAScriptView *_self, BOOL wrapsLines);

// method '-[OSAScriptView source]'
id _IM_OSAScriptView_source(OSAScriptView *_self);

// method '-[OSAScriptView tabWidth]'
int _IM_OSAScriptView_tabWidth(OSAScriptView *_self);

// method '-[OSAScriptView usesScriptAssistant]'
BOOL _IM_OSAScriptView_usesScriptAssistant(OSAScriptView *_self);

// method '-[OSAScriptView usesTabs]'
BOOL _IM_OSAScriptView_usesTabs(OSAScriptView *_self);

// method '-[OSAScriptView wrapsLines]'
BOOL _IM_OSAScriptView_wrapsLines(OSAScriptView *_self);

